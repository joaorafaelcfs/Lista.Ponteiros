#include <stdio.h>
#include <stdlib.h>
void multiplicacao (int **a, int **b, int **c, int la, int ca, int cb){
	int k1, k2,i, j, lb = ca, temp;	
	for ( k1 = 0; k1<la; k1++){		
		for (k2=0;k2<cb;k2++){	
		 	temp = 0;		
			for (i=0; i<ca; i++){
				temp = temp + a[k1][i]*b[i][k2];
			}
			c[k1][k2] = temp;			
		}
	}	
}
int main (){
	int la,ca,cb,lb,i,j;
	int **a, **b, **c;
	
	printf(" \n----- MULTIPLICACAO DE MATRIZES -----\n");	
	printf("Digite o número de Linhas da matriz A: ");
 	scanf("%d", &la);
 	printf("Digite o número de Colunas da matriz A: ");
 	scanf("%d", &ca);
 	printf("Digite o número de Linhas da matriz B: ");
 	scanf("%d", &lb);
 	if (lb!=ca){
 		printf("Não dá para fazer a multiplicação de matrizes");
 		return 0;
	 }
 	printf("Digite o número de Colunas da matriz B: ");
 	scanf("%d", &cb);
 	
 	b = (int **) malloc(lb*sizeof(int*));
	a = (int **) malloc(la*sizeof(int*));
	
	c = (int **) malloc(la*sizeof(int*)); //MATRIZ C RECEBE O N° DE LINHAS DE A  E COLUNAS DE B
	
	for (i=0; i<la; i++){
		a[i] = (int*) malloc(ca*sizeof (int));
	}
	
	for (i=0; i<lb; i++){
		b[i] = (int*) malloc(cb*sizeof (int));
	}
	for (i=0; i<la; i++){
		c[i] = (int*) malloc(cb*sizeof (int));
	}
	
	printf("\nDigite os elementos da Matriz A\n");
	for (i=0; i<la; i++){
		for (j=0;j<ca; j++){
			printf("a[%d][%d] = ", i, j);
			scanf("%d", &a[i][j]);
		}
	}	
	printf("\nDigite os elementos da Matriz B\n");
	for (i=0; i<lb; i++){
		for (j=0;j<cb; j++){
			printf("b[%d][%d] = ", i, j);
			scanf("%d", &b[i][j]);
		}
	}	
	system ("pause");
	
	printf(" \n MATRIZ A: \n");
	for (i=0; i<la; i++){		
		for (j=0;j<ca; j++){
			printf(" %3d ", a[i][j]);			
		}
		printf("\n");
	}
	system ("pause");
	printf(" \n MATRIZ B: \n");	
	for (i=0; i<lb; i++){		
		for (j=0;j<cb; j++){
			printf(" %3d ", b[i][j]);			
		}
		printf("\n");
	}
	system ("pause");
	
	multiplicacao ( &*a, &*b, &*c, la, ca, cb);
	
	printf("\n MATRIZ C: \n");
	printf(" C = AxB \n");
	for (i=0; i<la; i++){		
		for (j=0;j<cb; j++){
			printf(" %3d ", c[i][j]);			
		}
		printf("\n");
	}
	free(b);
	free(a);
	free(c);
	return 0;
}